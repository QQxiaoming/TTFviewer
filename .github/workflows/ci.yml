name: CI

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'doc/**'
      - 'README.md'
      - 'README_zh_CN.md'
      - '.readthedocs.yaml'
  pull_request:
    branches: [ master ]
    paths-ignore:
      - 'doc/**'
      - 'README.md'
      - 'README_zh_CN.md'
      - '.readthedocs.yaml'
  workflow_dispatch:

jobs:
  ubuntu-2004:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2

      - name: Install Qt
        uses: jurplel/install-qt-action@v2.14.0

      - name: Install prerequisites
        run: |
          sudo apt update
          sudo apt install -y make gcc patchelf

      - name: Build all
        run: |
          git fetch --tags --force
          git describe --always --long --dirty --abbrev=10 --tags | awk '{print "\""$0"\""}' > git_tag.inc
          sed -i 's/git_tag.inc/git_tag.ci.inc/g' TTFviewer.pro
          sed -i 's/QT_DIR=\/opt/QT_DIR=$(cd "$(dirname "$0")";pwd)/g' build_deb.sh
          sed -i 's/\/home\/qqm\/Desktop\/ttfviewer\/depend\/freetype/\/usr\/local\/ttfviewer/g' partform_unix.pri
          cd depend
          sudo ./build.sh
          cd -
          ./build_deb.sh

      - name: Upload build asserts
        uses: actions/upload-artifact@v2.2.4
        with:
          name: TTFviewer_Ubuntu2004
          path: |
            ./dpkg/*.deb

      - name: Run tests
        run: |
          if ls ./dpkg | grep ".deb" ; then echo "Pass"; else echo "Failed" && exit 1; fi;
          timeout --foreground -s SIGKILL 20s ./dpkg/TTFviewer_Linux_*/opt/TTFviewer/TTFviewer --version > >(tee run.log) || {
            if cat run.log | grep "TTFviewer" ; then echo "Pass" && exit 0; else echo "Failed" && exit 1; fi;
          }

  ubuntu-1804:
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v2

      - name: Install Qt
        uses: jurplel/install-qt-action@v2.14.0

      - name: Install prerequisites
        run: |
          sudo apt update
          sudo apt install -y make gcc patchelf

      - name: Build all
        run: |
          git fetch --tags --force
          git describe --always --long --dirty --abbrev=10 --tags | awk '{print "\""$0"\""}' > git_tag.inc
          sed -i 's/git_tag.inc/git_tag.ci.inc/g' TTFviewer.pro
          sed -i 's/QT_DIR=\/opt/QT_DIR=$(cd "$(dirname "$0")";pwd)/g' build_deb.sh
          sed -i 's/\/home\/qqm\/Desktop\/ttfviewer\/depend\/freetype/\/usr\/local\/ttfviewer/g' partform_unix.pri
          cd depend
          sudo ./build.sh
          cd -
          ./build_deb.sh

      - name: Upload build asserts
        uses: actions/upload-artifact@v2.2.4
        with:
          name: TTFviewer_Ubuntu1804
          path: |
            ./dpkg/*.deb

      - name: Run tests
        run: |
          if ls ./dpkg | grep ".deb" ; then echo "Pass"; else echo "Failed" && exit 1; fi;
          timeout --foreground -s SIGKILL 20s ./dpkg/TTFviewer_Linux_*/opt/TTFviewer/TTFviewer --version > >(tee run.log) || {
            if cat run.log | grep "TTFviewer" ; then echo "Pass" && exit 0; else echo "Failed" && exit 1; fi;
          }

  windows:
    runs-on: windows-2019

    steps:
      - uses: actions/checkout@v2

      - name: Install Qt
        uses: jurplel/install-qt-action@v2.14.0
        with:
          arch: win64_mingw81

      - name: Install prerequisites
        run: |
          Choco-Install -PackageName innosetup --force
          Choco-Install -PackageName cmake --force

      - uses: msys2/setup-msys2@v2

      - name: Build depend
        shell: msys2 {0}
        run: |
          pacman --noconfirm -S make
          cd depend
          export PATH=/c/ProgramData/Chocolatey/lib/mingw/tools/install/mingw64/bin:$PATH
          ./build_ms.sh

      - name: Build all
        run: |
          git fetch --tags --force
          git describe --always --long --abbrev=10 --tags | ./tools/awk/awk.exe '{print \"\\\"\"$0\"\\\"\"}'  > git_tag.inc
          ./tools/sed/sed.exe -i "s/git_tag.inc/git_tag.ci.inc/g" TTFviewer.pro
          ./tools/sed/sed.exe -i "s/QT_DIR=C:\/Qt\/Qt5.12.8\/5.12.8\/mingw73_32\/bin/QT_DIR=%Qt5_Dir%/g" ./build_setup.bat
          ./tools/sed/sed.exe -i "s/QT_TOOLS_DIR=C:\/Qt\/Qt5.12.8\/Tools\/mingw730_32\/bin/QT_TOOLS_DIR=C:\/ProgramData\/Chocolatey\/lib\/mingw\/tools\/install\/mingw64\/x86_64-w64-mingw32\/bin/g" ./build_setup.bat
          ./tools/sed/sed.exe -i "s/FREETPE2_DIR=D:\\ttfviewer\\depend\\freetype/FREETPE2_DIR=D:\\freetype/g" ./partform_win32.pri
          ./build_setup.bat

      - name: Upload build asserts
        uses: actions/upload-artifact@v2.2.4
        with:
          name: TTFviewer_windows
          path: |
            ./InnoSetup/TTFviewer_setup.exe

      - name: Run tests
        run: |
          ./InnoSetup/build/TTFviewer.exe --version

  macos:
    runs-on: macos-10.15

    steps:
      - uses: actions/checkout@v2

      - name: Install Qt
        uses: jurplel/install-qt-action@v2.14.0

      - name: Install prerequisites
        run: |
          ruby - e  "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)" < /dev/null  2 > /dev/null
          brew install --build-from-source cmake

      - name: Build all
        run: |
          git fetch --tags --force
          git describe --always --long --dirty --abbrev=10 --tags | awk '{print "\""$0"\""}' > git_tag.inc
          sed -i'.original' -e 's/git_tag.inc/git_tag.ci.inc/g' TTFviewer.pro
          sed -i'.original' -e 's/QT_DIR=\/opt/QT_DIR=$(cd "$(dirname "$0")";pwd)/g' build_dmg.sh
          sed -i'.original' -e 's/\/home\/qqm\/Desktop\/ttfviewer\/depend\/freetype/\/usr\/local\/ttfviewer/g' partform_unix.pri
          cd depend
          sudo ./build.sh
          cd -
          ./build_dmg.sh

      - name: Upload build asserts
        uses: actions/upload-artifact@v2.2.4
        with:
          name: TTFviewer_macos
          path: |
            ./build_release/out/TTFviewer.dmg

      - name: Run tests
        run: |
          sudo hdiutil attach ./build_release/out/TTFviewer.dmg
          /Volumes/TTFviewer/TTFviewer.app/Contents/MacOS/TTFviewer --version
